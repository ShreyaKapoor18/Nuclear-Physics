import pandas as pd
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
%matplotlib inline
import numpy as np 
from scipy.optimize import curve_fit 

xl=pd.ExcelFile('/Users/shreyakapoor/Downloads/NUCLEARFINAL.xlsx')
df=xl.parse('Sheet1') #Dataframe loaded using pandas library in Python. 

av=15.8 #volume term  
ass=18.3 #surface term 
ac=0.7314 #coulombic repulsion term 
Aa=23.2  #Asymmetry term 

def func(X,av,ass,ac,Aa):
  Z=X[:,0]
  A=X[:,1]
  Y_pred=av*A-ass*(A**(float(2)/3))-ac*((Z**2)*(A**(float(-1)/3)))-Aa*(((A-2*Z)**2)/A)
  Y_pred=Y_pred/A
  return Y_pred

Z=np.array(df.Z)
A=np.array(df.A)
BE=np.array(df.iloc[:,6])

X=np.column_stack((Z,A))#stacking the two pandas series column wise. 
y=func(X,av,ass,ac,Aa) #Compute Y as a function of the values stored in X along with coefficients
                       #av, ass,ac,Aa
plt.xlabel('A')
plt.ylabel('BE/A')
plt.plot(A,BE)
plt.plot(A,y)

p0=10.8,10.3,1.414,18.2
#Initial Guess for the values of the coefficients

print curve_fit(func,X,y,p0)

print curve_fit(func,X,y,p0,method='dogbox')

plt.xlabel('A')
plt.ylabel('BE/A')
plt.scatter(A,BE,label='Original')
plt.plot(A,y,label='Calculated')
plt.legend()
plt.show()



